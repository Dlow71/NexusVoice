<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nexusvoice.infrastructure.database.mapper.SystemConfigMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.nexusvoice.domain.config.model.SystemConfig">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="config_key" property="configKey" jdbcType="VARCHAR"/>
        <result column="config_value" property="configValue" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="config_group" property="configGroup" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BOOLEAN"/>
        <result column="readonly" property="readonly" jdbcType="BOOLEAN"/>
        <result column="sort_order" property="sortOrder" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, config_key, config_value, description, config_group, enabled, readonly, 
        sort_order, remark, created_at, updated_at, deleted
    </sql>

    <!-- 根据配置键查询配置 -->
    <select id="selectByKey" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM system_config
        WHERE config_key = #{configKey}
        AND deleted = 0
        LIMIT 1
    </select>

    <!-- 根据配置分组查询配置列表 -->
    <select id="selectByGroup" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM system_config
        WHERE config_group = #{configGroup}
        AND deleted = 0
        ORDER BY sort_order ASC, id ASC
    </select>

    <!-- 查询所有启用的配置 -->
    <select id="selectAllEnabled" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM system_config
        WHERE enabled = TRUE
        AND deleted = 0
        ORDER BY sort_order ASC, id ASC
    </select>

    <!-- 根据条件查询配置列表（分页） -->
    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM system_config
        WHERE deleted = 0
        <if test="configKey != null and configKey != ''">
            AND config_key LIKE '%' || #{configKey} || '%'
        </if>
        <if test="configGroup != null and configGroup != ''">
            AND config_group = #{configGroup}
        </if>
        <if test="enabled != null">
            AND enabled = #{enabled}
        </if>
        ORDER BY sort_order ASC, id ASC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 根据条件统计配置数量 -->
    <select id="countByCondition" resultType="long">
        SELECT COUNT(*)
        FROM system_config
        WHERE deleted = 0
        <if test="configKey != null and configKey != ''">
            AND config_key LIKE '%' || #{configKey} || '%'
        </if>
        <if test="configGroup != null and configGroup != ''">
            AND config_group = #{configGroup}
        </if>
        <if test="enabled != null">
            AND enabled = #{enabled}
        </if>
    </select>

    <!-- 检查配置键是否存在 -->
    <select id="countByKey" resultType="int">
        SELECT COUNT(*)
        FROM system_config
        WHERE config_key = #{configKey}
        AND deleted = 0
    </select>

    <!-- 检查配置键是否存在（排除指定ID） -->
    <select id="countByKeyExcludeId" resultType="int">
        SELECT COUNT(*)
        FROM system_config
        WHERE config_key = #{configKey}
        AND id != #{excludeId}
        AND deleted = 0
    </select>

    <!-- 批量更新配置状态 -->
    <update id="batchUpdateStatus">
        UPDATE system_config
        SET enabled = #{enabled},
            updated_at = CURRENT_TIMESTAMP
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

</mapper>
